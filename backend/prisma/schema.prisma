// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Client {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String
  address   String
  imageUrl  String? 
  carts     Cart[]
  orders    Order[]
  dishRatings DishRating[] 
 
}

model Chife {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String
  imageUrl  String? 
  dishes    Dish[]  
  orders    Order[] 
}

model DeliveryBoy {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  bio       String?
  phone     String
  imageUrl  String?  
  orders    Order[]  
}

model Dish {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Float
  imageUrl    String[] 
  ChifeId      Int      
  Chifes        Chife     @relation(fields: [ChifeId], references: [id]) 
  ingredientsId Int
  ingredients   Ingredients @relation(fields: [ingredientsId], references: [id])
  cartItems   CartItem[] 
  ratings     DishRating[] 
}
model Ingredients {
  id              Int      @id @default(autoincrement())
  ingredient      String
  ingredientPrice Float
  Dishs           Dish[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Cart {
  id        Int      @id @default(autoincrement())
  clientId  Int      
  client    Client   @relation(fields: [clientId], references: [id])
  items     CartItem[] 
}

model CartItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  cartId    Int      
  cart      Cart     @relation(fields: [cartId], references: [id])
  dishId    Int      
  dish      Dish     @relation(fields: [dishId], references: [id])
}

model Order {
  id              Int          @id @default(autoincrement())
  totalAmount     Float
  status          String     
  clientId        Int          
  ChifeId          Int         
  deliveryBoyId   Int?        
  client          Client       @relation(fields: [clientId], references: [id])
  Chifes            Chife         @relation(fields: [ChifeId], references: [id])
  deliveryBoy     DeliveryBoy? @relation(fields: [deliveryBoyId], references: [id])
}

model DishRating {
  id        Int      @id @default(autoincrement())
  clientId  Int      
  dishId    Int      
  rating    Int      
  comment   String?  
  client    Client   @relation(fields: [clientId], references: [id])
  dish      Dish     @relation(fields: [dishId], references: [id])
}



model Admin {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
}
